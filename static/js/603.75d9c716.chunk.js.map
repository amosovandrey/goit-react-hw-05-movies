{"version":3,"file":"static/js/603.75d9c716.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","components/MoviesItem/MoviesItem.styled.jsx","components/MoviesItem/MoviesItem.jsx","services/formattedDate.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nconst breakpointTablet = '768px';\nconst breakpointDesktop = '1440px';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  padding: 12px;\n  font-size: 14px;\n\n  @media screen and (min-width: ${breakpointTablet}) {\n    gap: 32px;\n    padding: 24px;\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: ${breakpointDesktop}) {\n    gap: 48px;\n    padding: 36px;\n    font-size: 18px;\n  }\n`;\n","import { styled } from 'styled-components';\n\nconst breakpointTablet = '768px';\nconst breakpointDesktop = '1440px';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  padding: 12px;\n  font-size: 14px;\n\n  @media screen and (min-width: ${breakpointTablet}) {\n    gap: 32px;\n    padding: 24px;\n    font-size: 16px;\n  }\n\n  @media screen and (min-width: ${breakpointDesktop}) {\n    gap: 48px;\n    padding: 36px;\n    font-size: 18px;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  margin: 0 auto;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 296px;\n  gap: 24px;\n  @media screen and (min-width: ${breakpointTablet}) {\n    width: 720px;\n  }\n\n  @media screen and (min-width: ${breakpointDesktop}) {\n    width: 1392px;\n  }\n`;\n\nexport const MovieWrapper = styled.div`\n  /* margin: 0 auto; */\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 24px;\n`;\n\nexport const MovieTitle = styled.h1`\n  color: var(--color-txt-2);\n  font-size: 24px;\n  text-align: center;\n  letter-spacing: 0.1rem;\n`;\n\nexport const MovieItem = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 24px;\n`;\n\nexport const MovieImage = styled.img`\n  width: 296px;\n  height: 444px;\n  @media screen and (min-width: ${breakpointTablet}) {\n    width: 348px;\n    height: 522px;\n  }\n\n  @media screen and (min-width: ${breakpointDesktop}) {\n  }\n`;\n\nexport const MovieDesc = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 24px;\n  width: 296px;\n\n  @media screen and (min-width: ${breakpointTablet}) {\n    width: 348px;\n    height: 522px;\n  }\n  @media screen and (min-width: ${breakpointDesktop}) {\n    width: 708px;\n  }\n`;\n\nexport const DetailsWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  width: 100%;\n  @media screen and (min-width: ${breakpointDesktop}) {\n    padding: 0 156px;\n  }\n`;\n\nexport const DetailsList = styled.ul`\n  display: flex;\n  gap: 24px;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nexport const DetailsListItem = styled.li`\n  background-color: var(--color-bg);\n  border-radius: 4px;\n  padding: 8px;\n  min-width: 100px;\n  text-align: center;\n  transition: var(--transition);\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n","import { useParams, Outlet, NavLink } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport defaultPoster from '../../../src/default-movie.png';\nimport { Loader } from 'components/Loader/Loader';\n\nimport {\n  fetchMovieDetailes,\n  IMAGE_BASE_URL,\n  IMAGE_SIZE,\n} from 'services/tmdbAPI';\nimport { formatDate } from 'services/formattedDate';\nimport {\n  MovieWrapper,\n  MovieTitle,\n  MovieImage,\n  MovieDesc,\n  MovieItem,\n  DetailsList,\n  DetailsListItem,\n  DetailsWrapper,\n  Container,\n} from './MoviesItem.styled';\n\nconst StyledLink = styled(NavLink)`\n  color: var(--color-txt);\n  text-decoration: none;\n  transition: var(--transition);\n  &.active {\n    text-transform: uppercase;\n    color: var(--color-accent);\n  }\n`;\n\nconst MoviesItem = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    fetchMovieDetailes(movieId)\n      .then(function (response) {\n        setIsLoading(true);\n        setMovie(response.data);\n      })\n      .catch(function (error) {\n        console.error(error);\n        setError(error);\n      })\n      .finally(function () {\n        setTimeout(() => {\n          setIsLoading(false);\n        }, 300);\n      });\n  }, [movieId]);\n\n  const formattedDate = formatDate(movie.release_date);\n  return (\n    <>\n      {isLoading && <Loader />}{' '}\n      {error ? (\n        <h2>Oops!.. Sorry, there are no details about this movie ðŸ˜”</h2>\n      ) : (\n        <Container>\n          <MovieWrapper>\n            {movie.title ? (\n              <MovieTitle>{movie.title}</MovieTitle>\n            ) : (\n              <MovieTitle>{` `}</MovieTitle>\n            )}\n            <MovieItem>\n              <MovieImage\n                src={\n                  movie.poster_path\n                    ? `${IMAGE_BASE_URL}${IMAGE_SIZE}${movie.poster_path}`\n                    : defaultPoster\n                }\n                alt={`poster for the ${movie.title}`}\n              />\n\n              <MovieDesc>\n                <p>{movie.overview}</p>\n                <p>Released: {formattedDate}</p>\n              </MovieDesc>\n            </MovieItem>\n          </MovieWrapper>\n          <DetailsWrapper>\n            <DetailsList>\n              <DetailsListItem>\n                <StyledLink to=\"cast\">Cast</StyledLink>\n              </DetailsListItem>\n              <DetailsListItem>\n                <StyledLink to=\"reviews\">Reviews</StyledLink>\n              </DetailsListItem>\n            </DetailsList>\n          </DetailsWrapper>\n          <Outlet />\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default MoviesItem;\n","export const formatDate = date => {\n  const options = { day: 'numeric', month: 'short', year: 'numeric' };\n  const formattedDate = new Date(date).toLocaleDateString('en-GB', options);\n\n  const [day, month, year] = formattedDate.split(' ');\n\n  //   const capitalizedMonth = month.toUpperCase();\n\n  return `${day} ${month} ${year}`;\n};\n","import { useLocation, NavLink } from 'react-router-dom';\nimport React, { useRef } from 'react';\nimport styled from 'styled-components';\n\nimport { Wrapper } from './MovieDetails.styled';\n\nimport MoviesItem from 'components/MoviesItem/MoviesItem';\nimport ScrollToTop from 'components/Scroll/Scroll';\n\nconst StyledLink = styled(NavLink)`\n  color: var(--color-txt);\n  text-decoration: none;\n  transition: var(--transition);\n  &.active {\n    text-transform: uppercase;\n    color: var(--color-accent);\n  }\n\n  &:hover {\n    color: var(--color-accent);\n    transform: scale(1.02);\n  }\n`;\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  return (\n    <Wrapper>\n      <StyledLink to={backLinkLocationRef.current}>Go Back</StyledLink>\n\n      <MoviesItem />\n      <ScrollToTop />\n    </Wrapper>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","breakpointTablet","breakpointDesktop","Container","_templateObject2","MovieWrapper","_templateObject3","MovieTitle","_templateObject4","MovieItem","_templateObject5","MovieImage","_templateObject6","MovieDesc","_templateObject7","DetailsWrapper","_templateObject8","DetailsList","_templateObject9","DetailsListItem","_templateObject10","StyledLink","NavLink","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","useEffect","fetchMovieDetailes","then","response","data","catch","console","finally","setTimeout","formattedDate","date","_formattedDate$split","Date","toLocaleDateString","day","month","year","split","_formattedDate$split2","concat","formatDate","release_date","_jsxs","_Fragment","children","_jsx","Loader","title","src","poster_path","IMAGE_BASE_URL","IMAGE_SIZE","defaultPoster","alt","overview","to","Outlet","_location$state$from","_location$state","location","useLocation","backLinkLocationRef","useRef","state","from","current","MoviesItem","ScrollToTop"],"sourceRoot":""}